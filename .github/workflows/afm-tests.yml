name: AFM Test Workflow

# Trigger the workflow on every push to any branch
on:
  push:
    branches:
      - '**'  # Triggers on all branches
  pull_request:
    branches:
      - '**'  # Triggers on all pull requests for all branches
  repository_dispatch:
    types: [run-tests]  # Use a custom event type like 'run-tests'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Check out the repository
      uses: actions/checkout@v3
    
    # Step 1.5: python setup
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x' 

    # Step 2: Set up Node.js environment (adjust version as needed)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Adjust Node.js version if needed

    # Step 3: Install dependencies
 #   - name: Install Python dependencies
  #    run: |
   #     python -m pip install --upgrade pip
    #    pip install -r requirements.txt  
     #   pip install djangorestframework  


    # Step 4: Run Linter for code quality # NOT SURE HOW STRICT THIS FUNCTIONALITY IS
    #- name: Run Linter
     # run: npm run lint

    # Step 5: Run Security Checks #
    - name: Run Security Checks
      uses: github/codeql-action/init@v2
      with:
        languages: python

        
    # Step 6: Unit Tests
    - name: Run Python Tests
      run: |
        python -m unittest discover -s tests  # to be adjusted based on framework used and location of tests

    # Step 6.2: Run Coverage
    - name: Run Coverage
      run: npm run coverage  # or "npm run test -- --coverage" if using Jest



    # Step 7: Upload Coverage Report to Codecov 
 #   - name: Upload Coverage to Codecov
  #    uses: codecov/codecov-action@v3
   #   with:
    #    token: ${{ secrets.CODECOV_TOKEN }}  # Store Codecov token in GitHub Secrets #any point?


    # Additional steps for feature-specific and compliance tests can go here.

    # Step 7.2: Upload Coverage Report to Codecov
    - name: Upload Test Results
      if: always()  # This ensures the step runs even if tests fail
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          ./tests/reports/**/*
          ./frontend/coverage/**/*  # Adjust paths as needed
    